snippet cla #comment
	/**
	 * ${1: Description of class}
	 *
	 * @class ${2: ClassName}
	 * @constructor
	 * ${3: @extends ${4: BaseClass}}
	 * ${5: @param \{${6: paramType}\} ${7: paramName} ${8: Description of param }}
	 */
	function $2 ($7) {
		${0:  // TODO ...}
	}
	${9: util.inherits($2, $4);}

snippet exp
	module.exports

snippet fun #comment
	/**
	 * ${1: Description of function}
	 * @method ${2: functionName}
	 * @param {${3: paramType}} ${4: paramName} ${5: Description of param}
	 * @return {${6: returnType}} ${7: Description of the return value}
	 */
	function $2 ($4) {
		${0: // TODO ...}
	}

snippet mod #module + comment
	/**
	 * ${1: Description of module} 
	 *
	 * @module ${2: module-name}
	 */
	$0

snippet prop #property with comments
	/**
	 * ${1: Description of the property }
	 *
	 * @property ${2: propertyName}
	 * @type ${3: propertyType}
	 * @default ${4: defaultValue}
	 */
	this.$2 = $4;

snippet proto #prototype with comments
	/**
	 * ${1: Description of method}
	 * @method ${2: methodName}
	 * @param {${4: paramType}} ${5: paramName} ${6: Description of param}
	 * @return {${7: returnType}} ${8: Description of the return value}
	 */
	${3: ClassName}.prototype.$2 = function ($5) {
		"use strict";
		${9: // TODO ...}
	};

snippet log #console.log
	console.log($0);

snippet / #comments
	/* $1 */
	$0

snippet req #require
	require('${1: module}')$0

snippet while #while
	while (${1: /*condition*/}) {$0}
