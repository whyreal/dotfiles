" Bundles
    if has('vim_starting')
        set nocompatible               " Be iMproved
        set runtimepath+=~/.vim/bundle/neobundle.vim/
    endif
    call neobundle#begin(expand('~/.vim/bundle/'))
    NeoBundleFetch 'Shougo/neobundle.vim'

	" Leader Key
	let mapleader=","

    NeoBundle 'whyreal/wr_vim'
    NeoBundle 'garbas/vim-snipmate'
        NeoBundle 'vim-scripts/vim-addon-mw-utils'
        NeoBundle 'tomtom/tlib_vim'
    NeoBundle 'plasticboy/vim-markdown'
    NeoBundle 'greyblake/vim-preview'
    NeoBundle 'vim-scripts/AutoComplPop'
    NeoBundle 'tomasr/molokai'
    NeoBundle 'scrooloose/nerdcommenter'
    NeoBundle 'scrooloose/nerdtree'
    	let g:NERDTreeShowBookmarks=1
        nmap <Leader>n :NERDTreeToggle <CR>
    NeoBundle 'mattn/emmet-vim'
    NeoBundle 'guns/xterm-color-table.vim'
    NeoBundle 'voom'

    "NeoBundle 'artur-shaik/vim-javacomplete2'
    "NeoBundle 'Lokaltog/vim-easymotion'
	"NeoBundle 'MarcWeber/vim-addon-errorformats'
    "NeoBundle 'tpope/vim-surround'
	"NeoBundle 'scrooloose/syntastic'
	"	let g:syntastic_check_on_open = 0
	"	let g:syntastic_mode_map = { 'mode': 'passive'}
	"	let g:syntastic_error_symbol='✗'
	"	let g:syntastic_warning_symbol='⚠'
	"	let g:syntastic_javascript_jshint_conf = "--config /Users/real/.jshint.json"
	"	let g:syntastic_javascript_checker = 'jshint'
    "
    "
    " COLOR
    "NeoBundle 'gummesson/stereokai.vim'
    "NeoBundle 'vim-scripts/Perfect-Dark'
    "NeoBundle 'altercation/vim-colors-solarized'
	
    call neobundle#end()

    filetype plugin indent on
    syntax on

" Edit
    set pastetoggle=<leader>p
    set clipboard+=unnamed         " yank and paste with the system clipboard
    set autoread
    set fileencodings=utf-8,gbk,ucs-bom,cp936,gb18030,big5,euc-jp,euc-kr,latin1

    " block edit
    nnoremap <silent> <F10> :call r#toggle_option("virtualedit", "all", "") <CR>

    "inoremap jj <Esc>
    "map <c-c> <esc>
	noremap q; q:
	nnoremap <Leader>w :w<CR>
	nnoremap <Leader>q :q<CR>
    nnoremap j gj
    nnoremap k gk
	nnoremap <Leader>bb :buffers <CR>
	nnoremap <Leader>bn :bn <CR>
	nnoremap <Leader>bp :bp <CR>

    " Auto change input method (gui only)
    if has('gui_running')
        set noimdisable
        set iminsert=0
        set imsearch=0
    endif

    " Better Shift
    vnoremap < <gv
    vnoremap > >gv

    " ModeLine
    set modeline
    set modelines=2
    set completeopt=longest,menuone

" Ui
    "set foldcolumn=4
    "set foldlevel=99
    "set colorcolumn=80
    set nocursorline
    set fillchars=vert:\|
    set hidden
    set mouse=a
    set bg=dark
	"colorscheme molokai

    if has('gui_running')
        set macmeta
        set cul
        set guifont=Menlo:h14
        set transparency=0
        set guioptions-=r
        set guioptions-=L
        colorscheme molokai
    endif

    " Split
    set splitbelow
    set previewheight=5

    " Number
	set number
    set relativenumber

    " Status line
    set laststatus=2
    set statusline=%y\ %m%F%=%r\ line:\ %l\ column:\ %c\ %P
    " swap files
	let s:swap_dir = $HOME . "/.vim/cache/swap"
	"call r#check_dir_exist(s:swap_dir)
	set noswapfile
	let &directory = s:swap_dir

" Search
    set smartcase
    set ignorecase
    set hlsearch
    set incsearch
    set tags=tags;/
    set wildmenu
    set wildmode=full
	set iskeyword=@,48-57,_,192-255,-,#,^.
    noremap n nzz
    noremap N Nzz

" Command mode
    cnoremap <C-F> <Right>
    cnoremap <C-B> <Left>
    cnoremap <M-F> <C-Right>
    cnoremap <M-B> <C-Left>
    cnoremap <C-A> <Home>
    cnoremap <C-E> <End>

" Misc
    " Stop using the arrow keys, Dude!
    "map <up> <nop>
    "map <down> <nop>
    "map <left> <nop>
    "map <right> <nop>
    " Help
    set helplang=en
    " cd to current directory.
    nnoremap <leader>cd :cd %:p:h<CR>
    nnoremap <silent> ? :!open dict://<cword><CR><CR>
