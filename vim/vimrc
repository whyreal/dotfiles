" Bundles
    if has('vim_starting')
        set nocompatible               " Be iMproved
        set runtimepath+=~/.vim/bundle/neobundle.vim/
    endif
    call neobundle#begin(expand('~/.vim/bundle/'))
    NeoBundleFetch 'Shougo/neobundle.vim'

	" Leader Key
	let mapleader=","
    nmap <C-l> [show]
    nmap <C-T> [tab]

	NeoBundle 'mattn/emmet-vim'

	NeoBundle 'Lokaltog/vim-easymotion'

	NeoBundle 'jnwhiteh/vim-golang'

	NeoBundle 'scrooloose/nerdtree'
		nmap <F2> :NERDTreeToggle <CR>
		let g:NERDTreeShowBookmarks=1

	NeoBundle 'MarcWeber/vim-addon-errorformats'

	NeoBundle "rizzatti/dash.vim"
		nmap <Leader>d :Dash<CR>

	NeoBundle 'msanders/snipmate.vim'

	"NeoBundle 'kien/ctrlp.vim'

	NeoBundle 'scrooloose/syntastic'
		let g:syntastic_check_on_open = 0
		let g:syntastic_mode_map = { 'mode': 'passive'}
		let g:syntastic_error_symbol='✗'
		let g:syntastic_warning_symbol='⚠'
		let g:syntastic_javascript_jshint_conf = "--config /Users/real/.jshint.json"
		let g:syntastic_javascript_checker = 'jshint'

	NeoBundle 'plasticboy/vim-markdown'

	NeoBundle 'greyblake/vim-preview'


	NeoBundle 'vim-scripts/AutoComplPop'
	
    call neobundle#end()

    filetype plugin indent on
    syntax on

" Edit
    set pastetoggle=<F11>
    set clipboard=unnamed         " yank and paste with the system clipboard
    set autoread
    set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1

    " block edit
    nnoremap <silent> <F10> :call r#toggle_option("virtualedit", "all", "") <CR>

    inoremap jj <Esc>
	noremap q; q:
	nnoremap <Leader>w :w<CR>
	nnoremap <Leader>q :q<CR>
	nnoremap <Leader>g :grep -i
    nnoremap <Leader>r :make % <CR>
    nnoremap <Leader>l :lopen <CR>
    nnoremap <Leader>c :copen <CR>
	nnoremap <Leader>bb :buffers <CR>
	nnoremap <Leader>bn :bn <CR>
	nnoremap <Leader>bp :bp <CR>

    " Auto change input method (gui only)
    if has('gui_running')
        set noimdisable
        set iminsert=0
        set imsearch=0
    endif

    " Better Shift
    vnoremap < <gv
    vnoremap > >gv

	" Scroll viewport faster.
	"nnoremap <C-e> 3<C-e>
	"nnoremap <C-y> 3<C-y>

" Tab
	nnoremap [tab]f  :tabfirst<CR>
	nnoremap [tab]l  :tablast<CR>
	nnoremap [tab]p  :tabprev<CR>
	nnoremap [tab]n  :tabnext<CR>
	nnoremap [tab]c  :tabnew 

" Ui
	set foldlevel=99
    set fillchars=vert:\|
    set hidden
    set mouse=a
    set bg=dark
	colorscheme desert

    if has('gui_running')
        set macmeta
        set cul
        set guifont=Menlo:h12
        set transparency=0
        set guioptions-=r
        set guioptions-=L
    "elseif $TERM_PROGRAM == "iTerm.app"
    "    set t_Co=256
    endif

    " Split
    set splitbelow
    set previewheight=5

    " Number
    "set foldcolumn=4
	"set relativenumber
	set number

    " Status line
    "set ruler
    set laststatus=2
    set statusline=%y\ %m%F%=%r\ line:\ %l\ column:\ %c\ %P

" undo/bak/swp file
"    " persistent undo
"	let s:undo_dir = $HOME . "/.vim/cache/undo"
"	if exists('+undofile')
"		"call r#check_dir_exist(s:undo_dir)
"		set undofile
"		let &undodir = s:undo_dir
"	endif
"
"    " backups
"	let s:backup_dir = $HOME . "/.vim/cache/backup"
"	"call r#check_dir_exist(s:backup_dir)
"	set backup
"	let &backupdir = s:backup_dir
"
    " swap files
	let s:swap_dir = $HOME . "/.vim/cache/swap"
	"call r#check_dir_exist(s:swap_dir)
	set noswapfile
	let &directory = s:swap_dir

" Search
    set smartcase
    set ignorecase
    set hlsearch
    set incsearch
    set tags=tags;/
    set wildmenu
    set wildmode=full
	set iskeyword=@,48-57,_,192-255,-,#,^.

" Functions & Command
    command! CdCurrentDir :cd %:p:h
    command! OpenCurrentDir :!open %:p:h
