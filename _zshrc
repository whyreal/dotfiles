# oh-my-zsh {{{1
# Path to your oh-my-zsh configuration.
export ZSH=$HOME/.oh-my-zsh
# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="candy"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(osx)

source $ZSH/oh-my-zsh.sh

#bindkey -v
fpath=(/usr/local/share/zsh-completions $fpath)

# }}}
# 别名 {{{1
alias grep='grep --color'
alias ls='exa'
alias cat='bat'
alias less='bat'
alias more='bat'
alias pg='ps aux | grep'
alias s='sshrc'
alias ta='tmux -u attach'
alias ....='cd ../../..'
alias ...='cd ../..'
alias ..='cd ..'
# }}}
# 环境变量 {{{1
# fix git problem for https
export GIT_SSL_NO_VERIFY=true
# history
export HISTSIZE=5000
export HISTFILESIZE=50000
# WORDCHARS
export WORDCHARS='-*?_[]~=&;!#$%^(){}'
# editor
export EDITOR='vim'
# use vim as man pager
export MANPAGER="vim -c 'MANPAGER' -c 'set fdm=indent ts=7 sw=7' -"

export LC_ALL="en_US.UTF-8"
#export LC_ALL="zh_CN.GB2312"
if [[ $LC_CTYPE = "zh_CN.eucCN" ]]; then
    export NLS_LANG=AMERICAN_AMERICA.ZHS16GBK
fi

# color
export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced
#export LSCOLORS='gxfxcxdxbxegedabagacad'
export PATH="/usr/local/sbin:$PATH"

export PATH=/Users/Real/Documents/Note/scripts/:$PATH

# MacVIM
export PATH=/Applications/MacVim.app/Contents/bin/:$PATH

# mysql
export PATH=/usr/local/opt/mysql-client/bin:$PATH

# golang
export GO111MODULE=auto  # enable go module
export PATH=/Users/Real/go/bin:$PATH
export GOPATH=/Users/Real/go

# python
export PATH=/Users/Real/Library/Python/3.7/bin/:$PATH

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# java
#export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_201.jdk/Contents/Home
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk8u212-b03/Contents/Home
export PATH=$JAVA_HOME/bin:$PATH 
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar 
export GRAALVM_HOME=/Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc14/Contents/Home

# nodejs
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# sqlplus
export PATH=$PATH:/Applications/instantclient_18_1

# NNN {{{2
export NNN_TMPFILE="/tmp/nnn"

n() {
    nnn "$@"

    if [ -f $NNN_TMPFILE ]; then
        . $NNN_TMPFILE
        rm $NNN_TMPFILE
    fi
}
# }}}

#}}}
# 自定义函数 {{{1
vpn.route.add.zkzy() {
    sudo route -n add 192.168.80/24 -interface ppp0
}

vpn.route.del.zkzy() {
    sudo route -n delete 192.168.80/24 -interface ppp0
}

safari.agent.ipad() {
    defaults write com.apple.Safari CustomUserAgent "'Mozilla/5.0 (iPad; CPU OS 5_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B176 Safari/7534.48.3'"
}

safari.agent.default() {
    defaults delete com.apple.Safari CustomUserAgent
}

password.gen() {
    openssl rand -base64 $1
}

org2doc() { 
    pandoc --reference-docx=/Users/Real/Documents/pandoc_docx_template.docx -f org -t docx --toc $1 -o $2
}

md2doc() { #{{{2
    input=$1
    extension=${input##*.}
    output=${input%md}docx

    if [[ ! -e $input ]];then
        echo "input file not exsit"
        exit 0;
    fi

    if [[ $extension != "md" ]];then
        echo "input file should be markdown"
        exit 0;
    fi

    #pandoc --toc -F mermaid-filter -f gfm -t docx --reference-doc=/Users/Real/Documents/pandoc_docx_template.docx $input -o $output
    pandoc --toc -s -t docx --reference-doc=/Users/Real/Documents/pandoc/pandoc_docx_template.docx $input -o $output
}
#}}}
env.update() { #{{{2
    /Users/Real/.tmux/plugins/tpm/bin/update_plugins all
    zsh /Users/Real/.oh-my-zsh/tools/upgrade.sh
    brew upgrade
    brew cleanup
    vim -c 'PlugUpdate | qall'
}
#}}}
# }}}
# 开发 {{{1

alias plantuml='java -jar /Applications/plantuml.jar'

open_project(){
    cd $1 && vim +NERDTree
}

alias pj.lycs.fe="open_project ~/code/whyreal/weixin_lycs/buddha_fe_browser/"
alias pj.lycs.be="open_project ~/code/whyreal/weixin_lycs/buddha_springboot_jpa"
alias pj.lycs.original="open_project ~/code/whyreal/weixin_lycs/buddha/"
alias note='open_project ~/Documents/vim-workspace/docs'
alias dotfiles='open_project ~/Documents/vim-workspace/dotfiles'
# }}}

# vim: fdm=marker sw=4 ts=4 et ft=zsh
